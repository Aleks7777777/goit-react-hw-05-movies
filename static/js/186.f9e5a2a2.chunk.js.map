{"version":3,"file":"static/js/186.f9e5a2a2.chunk.js","mappings":"yNAuCA,UAnCgB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAY,mCAAG,8GAEDC,EAAAA,EAAAA,IAAmBT,GAFlB,OAEbU,EAFa,OAInBN,EAAWM,GAJQ,gDAMnBJ,EAAS,EAAD,IANW,yDAAH,qDASlBE,GACA,GAAE,CAACR,KAEH,gCACEK,IAAS,yBAAMA,KAChB,wBACEF,EAAQQ,KAAI,SAAAC,GACZ,OACC,2BACC,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFHF,EAAOG,GAKjB,QAIJ,C,+LClCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACK,uBADLA,EAEQ,gBAFRA,EAGS,SAHTA,EAIS,WAJTA,EAKS,WAGFC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACNH,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACiBF,EADjB,iBACiCI,EADjC,wCADM,cAClBV,EADkB,yBAIjBA,EAAIW,KAAKC,SAJQ,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACTH,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,iBACoCI,EADpC,kBACkDI,EADlD,wCADS,cACrBd,EADqB,yBAKpBA,EAAIW,KAAKC,SALW,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMV,GAAN,uFACfE,EAAAA,EAAAA,IAAA,UACdC,EADc,YACaH,EADb,oBAC2BC,EAD3B,oBADe,cAC3BN,EAD2B,yBAK1BA,EAAIW,MALsB,2CAAH,sDAQlBK,EAAkB,mCAAG,WAAMX,GAAN,uFACfE,EAAAA,EAAAA,IAAA,iBACPF,GADO,OACFG,EADE,oBACiCF,EADjC,oBADe,cAC3BN,EAD2B,yBAK1BA,EAAIW,KAAKM,MALiB,2CAAH,sDAQlBlB,EAAkB,mCAAG,WAAOM,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACfH,EAAAA,EAAAA,IAAA,iBACPF,GADO,OACFG,EADE,oBACiCF,EADjC,gCACgEI,IAFjD,cAC3BV,EAD2B,yBAK1BA,EAAIW,KAAKC,SALiB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from '../../services/movies-api';\n\nconst Reviews = () => {\n\tconst { movieId } = useParams();\n\n\tconst [reviews, setReviews] = useState([]);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetchReviews = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetchMoviesReviews(movieId);\n\n\t\t\t\tsetReviews(res);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t}\n\t\t};\n\t\tfetchReviews();\n\t}, [movieId]);\n\treturn (\n\t\t<>\n\t\t\t{error && <div>{error}</div>}\n\t\t\t<ul>\n\t\t\t\t{reviews.map(review => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={review.id}>\n\t\t\t\t\t\t\t<p>Author: {review.author}</p>\n\t\t\t\t\t\t\t<p>{review.content}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default Reviews;","import axios from 'axios';\n\n\nconst API_KEY = '53deba482844164d0bc2733be2b16124';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n\ttrending: '/trending/movie/week',\n\tquerySearch: '/search/movie',\n\tmovieDetails: '/movie',\n\tmovieCredits: '/credits',\n\tmovieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n\t);\n\treturn res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n\t);\n\n\treturn res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n\t);\n\n\treturn res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n\tconst res = await axios.get(\n\t\t`/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n\t);\n\n\treturn res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n\tconst res = await axios.get(\n\t\t`/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n\t);\n\n\treturn res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}