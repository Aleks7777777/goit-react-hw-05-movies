{"version":3,"file":"static/js/381.9f3b5da7.chunk.js","mappings":"2JA4BA,IAzBkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAE5B,OACC,+BACC,wBACED,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACX,yBACC,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,UACC,wBAAKG,OAFED,EADE,OAUf,C,sDCjBD,MAAwB,2B,SCCT,SAASK,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrC,OAAO,eAAIC,UAAWC,EAAf,SAA6BF,GACpC,C,8ICFc,SAASG,IACvB,OACC,yDAC4B,SAAC,KAAD,CAAMP,GAAG,IAAT,uBAA8B,IAD1D,MAID,CCAc,SAASQ,IACvB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,MAGAC,EAAAA,EAAAA,YAAU,WAERD,GAAW,IACXE,EAAAA,EAAAA,MACEC,MAAK,SAAAC,GACLR,EAAUQ,EAEV,IACAC,OAAM,SAAAR,GACNC,EAAS,kCACTQ,QAAQC,IAAIV,EACZ,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGX,GAAE,IAGH,IAAMS,GAAcV,IAAYlB,EAAO6B,OACvC,OACC,+BACC,UAACC,EAAA,EAAD,YACC,SAACC,EAAA,EAAD,CAAatB,KAAM,oBAElBS,GAAW,cACXU,IAAc,SAAChB,EAAD,IACdI,IAAS,yBAAMA,IACfhB,IAAU,SAACgC,EAAA,EAAD,CAAWhC,OAAQA,QAIjC,C,+LC1CKiC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACK,uBADLA,EAEQ,gBAFRA,EAGS,SAHTA,EAIS,WAJTA,EAKS,WAGFd,EAAS,mCAAG,yGAAOe,EAAP,+BAAc,EAAd,SACNF,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACiBF,EADjB,iBACiCG,EADjC,wCADM,cAClBC,EADkB,yBAIjBA,EAAIC,KAAKf,SAJQ,2CAAH,qDAOTgB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACTF,EAAAA,EAAAA,IAAA,UACdC,EADc,oBACoBF,EADpB,iBACoCG,EADpC,kBACkDI,EADlD,wCADS,cACrBH,EADqB,yBAKpBA,EAAIC,KAAKf,SALW,2CAAH,sDAQZkB,EAAkB,mCAAG,WAAMtC,GAAN,uFACf+B,EAAAA,EAAAA,IAAA,UACdC,EADc,YACahC,EADb,oBAC2B8B,EAD3B,oBADe,cAC3BI,EAD2B,yBAK1BA,EAAIC,MALsB,2CAAH,sDAQlBI,EAAkB,mCAAG,WAAMvC,GAAN,uFACf+B,EAAAA,EAAAA,IAAA,iBACP/B,GADO,OACFgC,EADE,oBACiCF,EADjC,oBADe,cAC3BI,EAD2B,yBAK1BA,EAAIC,KAAKK,MALiB,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOzC,GAAP,4FAAWiC,EAAX,+BAAkB,EAAlB,SACfF,EAAAA,EAAAA,IAAA,iBACP/B,GADO,OACFgC,EADE,oBACiCF,EADjC,gCACgEG,IAFjD,cAC3BC,EAD2B,yBAK1BA,EAAIC,KAAKf,SALiB,2CAAH,qD","sources":["components/MoviesTrending/MovieList.jsx","webpack://react-homework-template/./src/components/Pageheading/Pageheading.module.css?c3d3","components/Pageheading/Pageheading.jsx","not_found/NotFoundView.jsx","pages/HomePage/HomePage.jsx","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t{movies.map(({ id, original_title }) => (\n\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t<Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n\t\t\t\t\t\t\t<h3>{original_title}</h3>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nMovieList.propTypes = {\n\tmovies: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\toriginal_title: PropTypes.string.isRequired,\n\t\t})\n\t).isRequired,\n};\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Pageheading_title__ZNlVz\",\"shadow-blink\":\"Pageheading_shadow-blink__tPfqn\"};","import style from './Pageheading.module.css';\n\nexport default function PageHeading({ text }) {\n\treturn <h1 className={style.title}>{text}</h1>;\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n\treturn (\n\t\t<h1>\n\t\t\tPage is not found :( Go to <Link to=\"/\">Home page</Link>{' '})\n\t\t</h1>\n\t);\n}","\nimport Container from '../../components/Container/Container';\nimport Pageheading from '../../components/Pageheading/Pageheading';\nimport MovieList from '../../components/MoviesTrending/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from '../../services/movies-api';\nimport NotFoundView from '../../not_found/NotFoundView';\n\nexport default function GetTrendingMovies() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [error, setError] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\n\tuseEffect(() => {\n\t\tconst fetchTrendingMovies = () => {\n\t\t\tsetLoading(true);\n\t\t\tgetMovies()\n\t\t\t\t.then(results => {\n\t\t\t\t\tsetMovies(results);\n\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetError('Ooops. Something went wrong...');\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoading(false));\n\t\t};\n\t\tfetchTrendingMovies();\n\t}, []);\n\n\n\tconst isNotFound = !loading && !movies.length;\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Pageheading text={'Trending Movies'}></Pageheading>\n\n\t\t\t\t{loading && 'Loading ...'}\n\t\t\t\t{isNotFound && <NotFoundView />}\n\t\t\t\t{error && <div>{error}</div>}\n\t\t\t\t{movies && <MovieList movies={movies} />}\n\t\t\t</Container>\n\t\t</>\n\t);\n}","import axios from 'axios';\n\n\nconst API_KEY = '53deba482844164d0bc2733be2b16124';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n\ttrending: '/trending/movie/week',\n\tquerySearch: '/search/movie',\n\tmovieDetails: '/movie',\n\tmovieCredits: '/credits',\n\tmovieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n\t);\n\treturn res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n\t);\n\n\treturn res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n\tconst res = await axios.get(\n\t\t`${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n\t);\n\n\treturn res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n\tconst res = await axios.get(\n\t\t`/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n\t);\n\n\treturn res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n\tconst res = await axios.get(\n\t\t`/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n\t);\n\n\treturn res.data.results;\n};\n"],"names":["movies","prevLocation","map","id","original_title","to","state","from","PageHeading","text","className","style","NotFoundView","GetTrendingMovies","useState","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","Pageheading","MovieList","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}